openapi: 3.0.2
# Revisions:
# 2019-05-09 initial version
# 2019-05-11 added nullable values to support patch
# 2019-05-17 TileRow and TileCol are now 'numbers' (not strings)
# 2019-05-17 "unless a different coordinate reference system is specified in the parameter `bbox-crs`." has been removed and instead we have added "unless a different coordinate         reference system is specified by another parameter in the API."
# 2019-05-21 "The default Tiling Scheme is the Google Maps Tiling Scheme" is changed to "The default Tiling Scheme is the WebMercatorQuad (sometimes refered as Google Maps Tiling Scheme)"
# 2019-05-21 "CRSId" has been added
# 
info:
  title: OGC API Building Blocks
  description: |-
    Common components used in the OGC API family of standards.
    
    This document is also available in [GitHub](https://github.com/cportele/ogc-api/blob/master/ogc-api.yaml).

  version: '1.0.0'
  contact:
    name: Clemens Portele
    email: portele@interactive-instruments.de
  license:
    name: OGC License
    url: 'https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/LICENSE'

components:
  ####################
  # Common data models
  ####################
  schemas:
    landing-page:
      required:
        - links
      type: object
      properties:
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/link'
      ##Example may vary among different services.
      example:
        - href: 'http://data.example.org/?f=json'
          rel: self
          type: application/json
          title: this document
        - href: 'http://data.example.org/?f=html'
          rel: alternate
          type: text/html
          title: this document in HTML
        - href: 'http://data.example.org/api?f=json'
          rel: service
          type: application/vnd.oai.openapi+json;version=3.0
          title: the API definition in OpenAPI 3.0 JSON
        - href: 'http://data.example.org/api?f=html'
          rel: service
          type: text/html
          title: the API definition in HTML
        - href: 'http://data.example.org/conformance?f=json'
          rel: conformance
          type: application/json
          title: the list of conformance classes implemented by this API
        - href: 'http://data.example.org/collections?f=json'
          rel: data
          type: application/json
          title: The feature collections in the dataset in JSON
        - href: 'http://data.example.org/collections?f=html'
          rel: data
          type: text/html
          title: The feature collections in the dataset in HTML
    link:
      required:
        - href
      type: object
      nullable: true
      properties:
        href:
          type: string
          nullable: true
          example: 'http://data.example.com/buildings/123'
        rel:
          type: string
          nullable: true
          example: next
        type:
          type: string
          nullable: true
          example: application/geo+json
        hreflang:
          type: string
          nullable: true
          example: en
    req-classes:
      required:
        - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          nullable: true
          example:
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/core'
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/oas30'
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/html'
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/geojson'
          items:
            type: string
    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: 'http://data.example.org/collections.json'
              rel: self
              type: application/json
              title: this document
            - href: 'http://data.example.org/collections.html'
              rel: alternate
              type: text/html
              title: this document as HTML
            - href: 'http://schemas.example.org/1.0/foobar.xsd'
              rel: describedBy
              type: application/xml
              title: XML schema for Acme Corporation data
        collections:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/collectionInfo'
    collectionInfo:
      type: object
      required:
        - id
        - links
      properties:
        id:
          type: string
          example: address
        title:
          type: string
          nullable: true
          example: address
        description:
          type: string
          nullable: true
          example: An address.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: 'http://data.example.com/collections/buildings/items'
              rel: 'items'
            - href: 'http://example.com/concepts/buildings.html'
              rel: 'describedBy'
              type: 'text/html'
            - href: 'http://data.example.com/collections/buildings/maps'
              rel: 'maps'
              type: 'text/html'
            - href: 'http://data.example.com/collections/buildings/tiles'
              rel: 'tiles'
              type: 'text/html'
        extent:
          $ref: '#/components/schemas/extent'
        crs:
          description: |-
            The list of coordinate reference systems supported by the service.
            The first item is the default coordinate reference system.
          type: array
          nullable: true
          items:
            type: string
          default:
            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          example:
            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
            - 'http://www.opengis.net/def/crs/EPSG/0/4326'
    extent:
      description: |-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
      type: object
      nullable: true
      properties:
        spatial:
          $ref: '#/components/schemas/spatial'
        temporal:
          $ref: '#/components/schemas/temporal'
    spatial:
      description: |-
        The spatial extent of the features in the collection.
      type: object
      nullable: true
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
        crs:
          $ref: '#/components/schemas/crs'
    bbox:
      description: |-
        One or more bounding boxes that describe the spatial extent of the dataset.
        In the Core only a single bounding box is supported. Extensions may support
        additional areas. If multiple areas are provided, the union of the bounding
        boxes describes the spatial extent.
      type: array
      nullable: true
      minItems: 1
      items:
        description: |-
          West, south, east, north edges of the bounding box. The coordinates
          are in the coordinate reference system specified in `crs`. By default
          this is WGS 84 longitude/latitude.
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
        example:
          - -180
          - -90
          - 180
          - 90
    crs:
      description: |-
        Coordinate reference system of the coordinates in the spatial extent
        (property `bbox`). The default reference system is WGS 84 longitude/latitude.
        In the Core this is the only supported coordinate reference system.
        Extensions may support additional coordinate reference systems and add
        additional enum values.
      type: string
      nullable: true
      enum:
        - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
      default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    temporal:
      description: |-
        The temporal extent of the features in the collection.
      type: object
      nullable: true
      properties:
        interval:
          $ref: '#/components/schemas/interval'
        trs:
          $ref: '#/components/schemas/trs'
    interval:
      description: |-
        One or more time intervals that describe the temporal extent of the dataset.
        The value `null` is supported and indicates an open time intervall.
        In the Core only a single time interval is supported. Extensions may support
        multiple intervals. If multiple intervals are provided, the union of the
        intervals describes the temporal extent.
      type: array
      nullable: true
      minItems: 1
      items:
        description: |-
          Begin and end times of the time interval. The timestamps
          are in the coordinate reference system specified in `trs`. By default
          this is the Gregorian calendar.
        type: array
        minItems: 2
        maxItems: 2
        items:
          type: string
          format: date-time
          nullable: true
        example:
          - '2011-11-11T12:22:11Z'
          - null
    trs:
      description: |-
        Coordinate reference system of the coordinates in the temporal extent
        (property `interval`). The default reference system is the Gregorian calendar.
        In the Core this is the only supported temporal reference system.
        Extensions may support additional temporal reference systems and add
        additional enum values.
      type: string
      nullable: true
      enum:
        - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
      default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
    queryables:
      type: array
      nullable: true
      items:
        oneOf:
          - $ref: '#/components/schemas/queryable-string'
          - $ref: '#/components/schemas/queryable-enum'
          - $ref: '#/components/schemas/queryable-number'
          - $ref: '#/components/schemas/queryable-boolean'
          - $ref: '#/components/schemas/queryable-date'
          - $ref: '#/components/schemas/queryable-dateTime'
    queryable:
      type: object
      nullable: true
      required:
        - id
        - type
      properties:
        id:
          type: string
          nullable: true
          description: |-
            the property name for use in expressions
        description:
          type: string
          nullable: true
          description: |-
            a description of the property
        required:
          type: boolean
          nullable: true
          default: false
          description: |-
            indicator whether the property is always present in features
        mediaTypes:
          type: array
          nullable: true
          description: |-
            In cases where a property is available only in a subset of the
            supported feature encodings, the list of the media types of the
            encodings can be specified.
            
            This capabilitiy is also needed for cases where the names of
            properties may differ between feature encodings. For example, 
            identifiers in an XML/GML encoding may include a namespace, 
            in GeoJSON or MVT this is not the case. 
            
            There are other reasons, too. For example, the property identifier
            in a Shapefile may be different because of length restrictions.
          items:
            type: string
        type:
          type: string
          nullable: true
          description: |-
            the data type of the property
          enum:
            - string
            - uri
            - enum
            - number
            - integer
            - date
            - dateTime
            - boolean
      discriminator:
        propertyName: type
        mapping:
          string: queryable-string      
          enum: queryable-enum      
          uri: queryable-string      
          number: queryable-number      
          integer: queryable-number      
          date: queryable-date      
          dateTime: queryable-dateTie      
          boolean: queryable-boolean      
    queryable-string:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          pattern:
            type: string
            nullable: true
            description: a regular expression to validate the values of the property
      example:
        id: name
        description: the name of the vegetation area
        required: true
        type: string
        example: '[A-Z0-9]{5}'
    queryable-enum:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        required:
          - values
        properties:
          values:
            type: array
            nullable: true
            description: the list of values of the property
            items:
              type: string
      example:
        id: type
        description: the dominant charcteristic of vegetation area
        type: enum
        values: [ 'grassland', 'forest', 'farmland' ]
    queryable-number:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: number
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: count
        description: the number of cattle
        type: integer
        range: [ 0 , null ]
    queryable-boolean:
      allOf:
      - $ref: '#/components/schemas/queryable'
      example:
        id: fenced
        description: indicator whether the area is walled or fenced
        type: boolean
    queryable-date:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: string
              format: date
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: inspectionDate
        description: the date of the last inspection
        type: date
        range: [ '2010-01-01', null ]
    queryable-dateTime:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: string
              format: date-time
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: lastUpdate
        description: the date of the last update of the feature
        type: dateTime
        range: [ '2018-01-01T00:00:00Z', null ]
    style-set:
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/style-set-entry'
      example:
        - id: 'night'
          title: 'Topographic night style'
          links:
          - href: 'https://example.com/api/1.0/styles/night?f=mapbox'
            type: 'application/vnd.mapbox.style+json'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/night?f=sld10'
            type: 'application/vnd.ogc.sld+xml;version=1.0'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/night/metadata?f=json'
            type: 'application/json'
            rel: 'describedBy'
        - id: 'topographic'
          title: 'Regular topographic style'
          links:
          - href: 'https://example.com/api/1.0/styles/topographic?f=mapbox'
            type: 'application/vnd.mapbox.style+json'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/topographic?f=sld10'
            type: 'application/vnd.ogc.sld+xml;version=1.0'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/topographic/metadata?f=json'
            type: 'application/json'
            rel: 'describedBy'
    style-set-entry:
      type: object
      nullable: true
      required:
        - id
        - links
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/link'
    featureCollectionGeoJSON:
      required:
        - features
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          type: string
          nullable: true
          format: dateTime
        numberMatched:
          minimum: 0
          type: integer
          nullable: true
        numberReturned:
          minimum: 0
          type: integer
          nullable: true
    featureGeoJSON:
      required:
        - geometry
        - properties
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
            - type: string
            - type: integer
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/link'
    geometryGeoJSON:
      type: object
      required:
        - type
      nullable: true
      properties:
        type:
          type: string
          enum:
            - Point
            - MultiPoint
            - LineString
            - MultiLineString
            - Polygon
            - MultiPolygon
            - GeometryCollection
    boundingBox:
      required:
        - type
      type: object
      nullable: true
      properties:
        type:
          type: string
          enum:
            - BoundingBox
        crs:
          type: string
          nullable: true
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        lowerCorner:
          type: array
          nullable: true
          items: 
            type: number
          example:
            - -20037508.3427892
            - -20037508.342789
        upperCorner:
          type: array
          nullable: true
          items: 
            type: number
          example:
            - 20037508.3427892
            - 20037508.3427892
    tileMatrix:
      type: object
      nullable: true
      required: 
        - type
        - identifier
        - scaleDenominator
        - topLeftCorner
        - tileWidth
        - tileHeight
        - matrixWidth
        - matrixHeight
      properties:
        type:
          description: Type of the Tile Matrix
          type: string
          enum:
            - TileMatrix
        title:
          description: Title of this tile matrix set, normally used for display to a human
          type: string
          nullable: true
          example: Google Maps Compatible for the World
        abstract:
          description: Brief narrative description of this tile matrix, normally available for display to a human
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this dataset
          type: array
          items:
            type: string
        identifier:
          description: Tile matrix identifier,
          type: string
          example: '0'
        scaleDenominator:
          description: Scale denominator level of this tile matrix
          type: number
          example: 559082264.028717
        topLeftCorner:
          description: Position in CRS coordinates of the top-left corner of this tile matrix
          type: array
          nullable: true
          items: 
            type: number
          example:
            - -20037508.3427892
            - 20037508.3427892
        tileWidth:
          description: Width of each tile of this tile matrix in pixels
          type: number
          minimum: 1
          multipleOf: 1
          example: 256
        tileHeight:
          description: Height of each tile of this tile matrix in pixels
          type: number
          minimum: 1
          multipleOf: 1
          example: 256
        matrixHeight:
          description: Width of the matrix (number of tiles in width)
          type: number
          minimum: 1
          example: 3
        matrixWidth:
          description: Height of the matrix (number of tiles in height)
          type: number
          minimum: 1
          example: 4
    tileMatrixSets:
      type: array
      items:
        $ref: '#/components/schemas/tileMatrixSet'
    tileMatrixSet:
      required:
        - identifier
        - type
      type: object
      nullable: true
      properties:
        type:
          description: Type of the Tile Matrix Set
          type: string
          enum:
            - TileMatrixSet
        title:
          description: Title of this tile matrix set, normally used for display to a human
          type: string
          nullable: true
          example: Google Maps Compatible for the World
        abstract:
          description: Brief narrative description of this tile matrix set, normally available for display to a human
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this dataset
          type: array
          items:
            type: string
        identifier:
          description: Tile matrix set identifier,
          type: string
          example: default
        boundingBox:
          description: Minimum bounding rectangle surrounding the tile matrix set, in the supported CRS,
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/boundingBox'
        supportedCRS:
          description: Reference to one coordinate reference system (CRS)
          type: string
          format: uri
          nullable: true
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        wellKnownScaleSet:
          description: Reference to a well-known scale set
          type: string
          nullable: true
          example: 'http://www.opengis.net/def/wkss/OGC/1.0/GoogleMapsCompatible'
        tileMatrix:
          description: Describes a scale level and its tile matrix
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/tileMatrix'
    mapbox-vector-tile:
      type: string
      format: binary
    exception:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: '500'
        description: 'An internal server error occured. Incident ID: 1234567. Please contact admin@example.org.'

  ####################
  # Common parameters
  ####################
  parameters:
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented 
        in the response document.
      
        Only items are counted that are on the first level of the collection in the response document. 
        Nested objects contained within the explicitly requested items shall not be counted.
      
        Minimum = 1. Maximum = 10000. Default = 10.
        
        Defined in [OGC API - Features - Part 1:Core](http://docs.opengeospatial.org/DRAFTS/17-069.html).
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
      style: form
      explode: false
    offset:
      name: offset
      in: query
      description: |-
        The optional offset parameter indicates the index within the result set
        from which the server shall begin presenting results in the response
        document. The first element has an index of 0.

        Minimum = 0. Default = 0.
      required: false
      style: form
      explode: false
      schema:
        minimum: 0
        type: integer
        default: 0
      example: 0
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (elevation or depth):
        
        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Lower left corner, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Upper right corner, coordinate axis 3 (optional)
      
        The coordinate reference system of the values is WGS 84 longitude/latitude
        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
        reference system is specified by another parameter in the API.
      
        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).
      
        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval, open or closed. Date and time expressions
        adhere to RFC 3339. Open intervals are expressed using double-dots.
      
        Examples:
      
        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
      
        Only features that have a temporal property that intersects the value of
        `datetime` are selected.
      
        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    resultType:
      name: resultType
      in: query
      description: |-
        This service will respond to a query in one of two ways (excluding an
        exception response). It may either generate a complete response document
        containing resources that satisfy the operation or it may simply
        generate an empty response container that indicates the count of the
        total number of resources that the operation would return. Which of
        these two responses is generated is determined by the value of the
        optional resultType parameter.

        The allowed values for this parameter are "results" and "hits".

        If the value of the resultType parameter is set to "results", the server
        will generate a complete response document containing resources that
        satisfy the operation.

        If the value of the resultType attribute is set to "hits", the server
        will generate an empty response document containing no resource
        instances.

        The default value is "results".
      required: false
      style: form
      explode: false
      schema:
        type: string
        default: results
        enum:
          - hits
          - results
      example: results
    featureId:
      name: featureId
      in: path
      description: |-
        local identifier of a feature
      required: true
      schema:
        type: string
    collectionId:
      name: collectionId
      in: path
      description: |-
        local identifier of a collection
      required: true
      schema:
        type: string
      example: buildings
    crsId:
      name: crsId
      in: path
      description: |-
        Local identifier of a specific CRS. A list of all available CRSIds can be found under the /CRS path. The default CRS is WGS 84.
      required: true
      schema:
        type: string
      example: WGS84
    tileMatrixSetId:
      name: tileMatrixSetId
      in: path
      description: |-
        Local identifier of a specific tiling scheme. A list of all available tileMatrixSetIds can be found under the /tiles path or below. The default Tiling Scheme is the WebMercatorQuad (sometimes refered as Google Maps Tiling Scheme).
      required: true
      schema:
        type: string
      example: WebMercatorQuad
    tileMatrix:
      name: tileMatrix
      in: path
      description: |-
        scaleDenominator of the tile. 
        
        If the Google Maps Tiling Scheme is used see
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: string
      example: '11'
    tileRow:
      name: tileRow
      in: path
      description: |-
        Row index of the tile on the selected zoom level. 
        
        If the Google Maps Tiling Scheme is used see
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: number
      example: '827'
    tileCol:
      name: tileCol
      in: path
      description: |-
        Column index of the tile on the selected zoom level. 
        
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: number
      example: 1231
    collections:
      name: collections
      in: query
      description: |-
        The collections that should be included in the response. The parameter value
        is a comma-separated list of collection identifiers.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    infoCollections:
      name: infoCollections
      in: query
      description: |-
        The collections that are used in a response of a information request. The parameter value is a comma-separated list of collection identifiers.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    properties:
      name: properties
      in: query
      description: |-
        The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
      
  #######################
  # Common request bodies
  #######################
  requestBodies: {}

  ####################
  # Common responses
  ####################
  responses:
    #LandingPage:
    #  description: |-
    #    The landing page provides links to the API definition, the conformance statements and to all other top-level resources shared by the API.
    #  content:
    #    application/json:
    #      schema:
    #        $ref: '#/components/schemas/landing-page'
    #    text/html:
    #      schema:
    #        type: string
    ConformanceDeclaration:
      description: |-
        The URIs of all requirements classes supported by the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/req-classes'
    Collections:
      description: |-
        The feature collections shared by this API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
    CollectionInfo:
      description: |-
        Metadata about the feature collection with id `collectionId`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collectionInfo'
        text/html:
          schema:
            type: string
    Created:
      description: |-
        Resource created.
      headers:
        Location:
          $ref: '#/components/headers/Location'
    Updated:
      description: |-
        The resource has been updated.
    UnauthorizedAccess:
      description: |-
        Unauthorized access.
    NotFound:
      description: |-
        The requested URI was not found.
    ServerError:
      description: |-
        A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'

  #########################
  # Common response headers
  #########################
  headers: 
    Location:
      schema:
          type: string
          format: uri
      description: |-
        URI of the new resource.
    Link:
      description: |-
        link header according to RFC 8288
      schema:
        type: string
      example: "Link: <http://data.example.org/collections/buildings/items.json>; rel=\"self\"; type=\"application/geo+json\""

  #######################
  # Common path items
  # NOTE: Referencing pathitems does not seem to work, so I have stopped defining/using them
  #######################

  ######################################
  # Common examples of input/output data
  ######################################
  examples: {}

  #########################
  # Common link definitions
  #########################
  links: {}

  #########################
  # Common callback definitions
  #########################
  callbacks: {}